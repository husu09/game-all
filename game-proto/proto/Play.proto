syntax = "proto2";
package com.su.proto;
option java_outer_classname = "PlayProto";

message CardPro {
	optional int32 value = 1;	// 牌面
	optional int32 suit = 2;	// 花色（0：无，1：方块，2：梅花，3：红桃，4：黑桃）
}

message MultipleTypePro {
	optional int32 type = 1;	// 类型
	optional int32 value = 2;	// 倍数
}

message TablePro {
	repeated GamePlayerPro players = 1;	// 玩家
	repeated MultipleTypePro multiples = 2;	// 倍数
	optional int32 state = 3;		// 状态
	optional int32 hold = 4;	// 牌权
	optional int32 roundScore = 5; // 轮分
	optional CardPro flagCard = 6;	// 被叫的牌
	optional int32	callState = 7;	// 叫牌状态
	optional int32 myself = 8;	// 我的位置
}

message GamePlayerPro {
	repeated CardPro handCards = 1;	// 玩家手牌
	optional int32 team = 2;	// 玩家队伍（0：无，1：红方，2：蓝方）
	optional MultipleTypePro myMultiple = 3;	// 倍数
	optional int32 myScore = 4;	// 得分
	optional int32 state = 5;	// 状态
	optional int64 deadline = 6;	// 截止时间
	optional int32 isAuto = 7;	// 是否托管
}

// 开始匹配
message startMatchReq {
	optional int32 siteId = 1;	// 场所id
}
message startMatchResp {
	
}

// 叫牌
message callReq {
	optional int32 cardIndex = 1;	// 出牌索引
}
message callResp {
	
}

// 出牌
message drawReq {
	optional int32 cardType = 1;	// 牌型
	repeated int32 cardIndexs = 2;	// 出牌索引
}
message drawResp {
	
}
// 过牌
message checkReq {

}
message checkResp {
	
}

// 准备
message readyReq {

}
message readyResp {

}
// 退出
message exitReq {

}
message exitResp {

}
// 加倍
message doubleReq{

}
message doubleResp{
}

// 使用道具
message useItemReq {
}
message useItemResp {
}

// 游戏开始通知
message gameStartNotice {
	optional TablePro table = 1;	// 牌桌数据
}

// 玩家数据更新通知
message updateGamePlayerNotice{
	optional GamePlayerPro gamePlayer = 1;	
}

// 牌桌数据更新通知
message updateTableNotice{
	optional TablePro table = 1;
}



